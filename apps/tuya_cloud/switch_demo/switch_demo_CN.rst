涂鸦云智能开关示例
====================

.. contents:: 目录
   :depth: 3

概述
----
这是一个基于涂鸦云服务的多连接智能开关示例，支持：

- 通过涂鸦云远程控制
- 局域网控制
- 蓝牙控制

主要功能包括：

- 用于设备绑定的二维码生成
- 用于控制和调试的命令行接口
- 网络配置重置
- 多种连接模式

工作原理
--------
示例工作流程如下：

1. **初始化阶段**:
   - 初始化日志系统、键值存储、定时器、工作队列
   - 读取设备授权信息(uuid和authkey)
   - 初始化涂鸦IoT客户端
   - 初始化网络连接(WiFi或有线)

2. **运行阶段**:
   - 启动涂鸦IoT任务
   - 进入主循环处理MQTT消息和事件
   - 处理各种事件(绑定、连接、OTA升级、数据点接收)

工作流程
--------
.. graphviz::

   digraph workflow {
       rankdir=LR;
       node [shape=box];
       
       开始 -> 初始化;
       初始化 -> 读取配置;
       读取配置 -> 初始化IoT;
       初始化IoT -> 初始化网络;
       初始化网络 -> 启动IoT;
       启动IoT -> 主循环;
       主循环 -> 处理事件;
       处理事件 -> 主循环 [label="继续"];
       处理事件 -> 停止 [label="退出"];
   }

关键组件
--------
1. **二维码生成 (qrencode_print.c)**
   - 使用libqrencode库
   - 支持UTF-8终端输出
   - 可配置参数:
     * 版本
     * 纠错级别
     * 边距大小
     * 颜色反转

2. **命令行接口 (cli_cmd.c)**
   可用命令:

   ======== ===========================================
   命令     描述
   ======== ===========================================
   switch   控制开关状态(开/关)
   kv       键值存储操作
   sys      执行系统命令
   reset    重置IoT服务
   start    启动IoT服务
   stop     停止IoT服务
   mem      显示内存使用情况
   netmgr   网络管理命令
   ======== ===========================================

3. **网络配置重置 (reset_netcfg.c)**
   - 使用键值存储保存重置计数器
   - 重置逻辑:
     * 每次启动时计数器+1
     * 5秒后自动清零
     * 如果计数器>=3则触发网络重置

使用说明
--------
1. **初始设置**:
   - 将固件烧录到设备
   - 通过串口控制台连接设备

2. **设备绑定**:
   - 运行命令生成二维码:
     ```
     qrcode "binding:device_uuid"
     ```
   - 使用涂鸦智能App扫描二维码

3. **控制开关**:
   - 开启:
     ```
     switch on
     ```
   - 关闭:
     ```
     switch off
     ```

4. **调试**:
   - 检查内存使用:
     ```
     mem
     ```
   - 重置网络配置(如需):
     ```
     reset
     ```

API参考
-------
1. **二维码生成**:
   .. code-block:: c

      void example_qrcode_string(const char *string, void (*fputs)(const char *str), int invert);

2. **开关控制**:
   .. code-block:: c

      static void switch_test(int argc, char *argv[]);

3. **网络重置**:
   .. code-block:: c

      void reset_netconfig_start(void);